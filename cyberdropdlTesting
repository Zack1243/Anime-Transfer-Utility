import requests
import json
import os
import re
import shutil
import subprocess
import sys
import cyberdrop_dl
import time
import yt_dlp
import zipfile
from PIL import Image
from tkinter import *
from tkinter import ttk
import tkinter as tk
from tkinter import filedialog
from tkinter import font
from tkinter import messagebox
from tkinter import Listbox
import os
import json
import shutil
import os
import re
import subprocess
import time
from seleniumwire import webdriver
#pip install blinker==1.4 #in case the import webdriver doesn't work
from selenium.webdriver.firefox.options import Options

INFOFILE = 'information.json'
global root
global frm
global retrieveFrm
global retrieveRoot
global downloadRoot
global storeRoot
global storeFrm
global progressRoot
global progressFrm
global downloadFrm
global data
global labels
global progressLabels
global retrieveAnimeMap
global storeAnimeMap
global showNumSize
showNumSize = {}
#root = Tk()
#frm = ttk.Frame(root, padding=10)
downloadRoot = Tk()
downloadFrm = ttk.Frame(downloadRoot, padding=10)


retrieveAnimeMap = {}
storeAnimeMap = {}
data = {
            "PC Directory": "testing",
            "PC Capacity": "testing",
            "PC storage usage": "testing",
            "Phone storage usage": "testing",
            "Phone Directory": "testing",
            "Phone Capacity": "testing",
        }
labels = {
        "PC Directory": StringVar(),
        "PC Storage Usage": StringVar(),
        "Phone Directory": StringVar(),
        "Phone Storage Usage": StringVar(),
    }
progressLabels = {
    "Summary": StringVar(), # Transfering NUM files to DIRECTORY
    "Percentage": StringVar(), # NUM% complete
    "numFiles": StringVar(), # Transfering file NUM/TOTAL
    "Name": StringVar(), # Name: NAME
    "sizeTransfered": StringVar(), # Transfered NUM / TOTAL SIZE
}

url = "https://noodlemagazine.com/watch/-108701372_456239026"

# Download the page

# Check if the page is downloaded ig
def download(url):
    try:
        print(f"Url: {url}")

        # Create Download Directory
        title = "fuckshitbitch"
        output_dir = os.path.join(os.getcwd(), title)
        if not os.path.exists(output_dir):
            os.makedirs(output_dir)
        
        result = subprocess.run([
            "cyberdrop-dl", "--download",
            "--ignore-history",
            # Change the output directory
            "--download-folder", output_dir,
            "--exclude-images",
            "-j",
            "--log-level", "10",
            url
            ], capture_output=True, text=True)
        # look in the downloaded folder
        video_exts = {".mp4", ".mkv", ".avi", ".mov", ".wmv", ".flv"}

        folder = output_dir
        print("starting the search!")
        for file in os.listdir(folder):
            print(f"Searching within the folder: {folder}")
            print(f"Name of the file: {file}")
            filePath = os.path.join(folder, file)
            if os.path.isdir(filePath):
                print(f"this is the file shown to be a directory: {file}")
                folder = os.path.join(folder, file)
                for video in os.listdir(folder):
                    print(f"found thing {video}")
                    if os.path.splitext(video)[1].lower() in video_exts:
                        title = os.path.splitext(video)[0]  # filename without extension
                        print("Found video:", video, "| Title:", title)
                        newDir = os.path.join(os.getcwd(), title)
                        folder = os.path.join(folder, video)
                        os.mkdir(newDir)
                        shutil.move(folder, newDir)
        

        if result.returncode == 0:
            print("Download succeeded... by cyberdrop!")
            return True
        else:
            print("Download failed:", result.stderr)
    except FileNotFoundError:
        print("Failed to download via cyberdrop!")
    except subprocess.CalledProcessError as e:
        print(f"Failed to download: {e}")
        return False


download(url)



































